############################
# Sample of grammar for the semantic parser
############################
[MOI]
cellrole = ignore

[IPPN]
cellrole = subject
celltype = ippn
columntype = ippn_contains

[CSN]
cellrole = object
celltype = csn
columntype = csn_located_in

[ISN]
cellrole = object
celltype = isn
columntype = isn_located_in

[PNR]
# pkey: will serve for all triples
cellrole = pkey
celltype = pnr

[MFC]
cellrole = subject
celltype = manufacturer
columntype = provides_part

[SRV]
# we'll generate triples like "Finland a Nation ."
cellrole = object,map(all;*nations*)
celltype = nation
columntype = serviced_to

[*nations*]
FIF = Finland
NON = Norway
SES = Sweden
AUA = Australia
ESA = Spain
GRC = Greece
NZL = New Zealand
OMO = Oman
QAQ = Qatar
BEB = Belgium
DEL = Germany
FRF = France
ITI = Italy
NLH = The Netherlands
PTP = Unknown Country

[ILSN]
cellrole = object
celltype = ilsn
columntype = ilsn_key

[VAPMOV$1]
# Should generate a duplicate from SRV
cellrole = object,map(0:1;*nationcodes*)
celltype = nation
columntype = vapmov_country_applicable_to

[VAPMOV$2]
cellrole = object,map(1:2;*map2*)
celltype = aircraft_type
columntype = vapmov_used_in

[*nationcodes*]
A = Australia 
B = Belgium
F = France
G = Germany
I = Italy
L = Finland
N = New Zealand
#N = The Netherlands ----- Duplicate code: est-ce que le même code a un sens différent selon les fichiers ?
S = Sweden
W = Norway
# Missing data
P = Country_ORey
O = Oman
Q = Qatar

[*map2*]
# These are not strings so the parser will add _ instead of spaces
# but we could consider make them strings (values)
A = Army/Tactical Troop Transport(TTT)/Search and Rescue(SAR)
E = Air Force Enhanced
F = Air Force
N = Navy/Anti-Submarine Warfare(ASW) )/Coast Guard(CG)
S = Navy Support
T = Navy TTH
X = Common
# Missing data
W = AircraftType_ORey
R = AircraftType2_ORey
P = AircraftType3_ORey

[Effectivity from (digits 1-4 of EFY)$1]
cellrole = object
celltype = effectivity
columntype = effectivity_from

[Effectivity from (digits 1-4 of EFY)$2]
cellrole = object,map(1:2;*configs*)
celltype = aircraft_configuration
columntype = mountable_on

[*configs*]
T = TTH with RRTM engine 
G = TTH with T700 engine
N = NFH with RRTM engine 
H = NFH with T700 engine
M = TTH with T700 engine and Autom Tail/Blade Folding System
B = TTH with high cabin and RRTM engine

[*countrycodes*]
AU = Australia 
BE = Belgium
FI = Finland 
FR = France 
GE = Germany
IT = Italy 
NL = The Netherlands
NW = Norway
NZ = New Zealand
SW = Sweden

[Effectivity to (digits 5-8 of EFY)$1]
cellrole = object
celltype = effectivity
columntype = effectivity_to

[Effectivity to (digits 5-8 of EFY)$2]
cellrole = object,extract(-3:)
celltype = bbl_validity_code
columntype = effectivity_to_bbl

[TOP]
cellrole = ignore

[NSC]
cellrole = object,prefix(nsc_)
celltype = higher_level_nato_part_id
columntype = nato_supply_class

[NIN]
cellrole = object,prefix(nin_)
celltype = lower_level_nato_part_id
columntype = nato_item_id_number

[(REFNCC) Reference Number Category Code]
cellrole = ignore

[(REFNVC) Reference Number Variation Code]
cellrole = ignore

[Description for Part (ADT)]
# description of pkey
cellrole = object
celltype = string
columntype = rdfs:comment

[PCD]
cellrole = object,map(all;*suppliers*)
celltype = supplier
columntype = supplied_by

[*suppliers*]
AG = Leonardo Helicopters
AH = Airbus Helicopters
ED = Airbus Helicopters Deutshland
FK = Fokker
TM = Safran Engine Helicopter
NH = NH Industry
XX = Dummy PCD for GFEs
YY = Obsolete/no more procurable parts

# reprendre ici l'analyse
[PLT]
cellrole = ignore


